import os
import shutil

def find_consensus_scoring(config):

    curdir = os.getcwd()
    workdir = 'scoring'

    if os.path.isdir(workdir):
        shutil.rmtree(workdir)
    os.mkdir(workdir)
    os.chdir(workdir)

    get_scores(config)

    os.chdir(curdir)

def get_scores(config):

    curdir = os.getcwd()
    pdbdir = 'PDB'
    os.mkdir(pdbdir)

    # write files containing the number of poses
    # generated by each software
    ff = open(pdbdir+'/info.dat', 'w')
    print >> ff, '#program        nposes'

    sh = 0 # shift of model idx
    for program in config.programs:
        prgdir = '../%s'%program
        os.chdir(prgdir)


    curdir = os.getcwd()

    for idx, program in enumerate(config.programs):
        
        tmpdir = 'scoring_vina'
        if os.path.isdir(tmpdir):
            shutil.rmtree(tmpdir)
 
        shutil.copyfile(file_r, tmpdir+'/rec.pdb')
        shutil.copyfile(file_l, tmpdir+'/lig.pdb')
 
        os.chdir(tmpdir)
        pdbt.create_reclig_file('rec.pdb', 'lig.pdb', 'rec-lig.pdb') # create file for complex
 
        with open('rec-lig.pdb', 'r') as frl:
            is_protein = True
            for line in frl:
                if line.startswith(('MODEL')):
                    ff = open('rec.tmp.pdb', 'w')
                    if line.startswith(('ATOM', 'HETATM')) and line[17:20] != 'LIG' and is_protein:
                        ff.close()
                        ff = open('lig.tmp.pdb', 'w')
                        is_protein = False
                    if line.startswith(('ATOM', 'HETATM', 'TER')):
                        ff.write(line)
                elif line.startswith('ENDMDL'): # molecule loaded
                    ff.close()
                    is_protein = True
                    # get score 
                    script_name = "run_" + prgm + ".sh"
                    write_docking_script = getattr(sys.modules[prgm], 'write_docking_script') 
